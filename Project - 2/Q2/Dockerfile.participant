# Stage 1: Build Go binary
FROM golang:1.23-alpine AS go-builder

WORKDIR /app

# Install protobuf dependencies
RUN apk add --no-cache protobuf protoc git && \
    go install google.golang.org/protobuf/cmd/protoc-gen-go@latest && \
    go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

COPY go.mod go.sum ./
RUN go mod download

COPY two_phase_commit.proto .
RUN mkdir -p ./twopc_go_pb && \
    protoc --go_out=./twopc_go_pb --go_opt=paths=source_relative \
           --go-grpc_out=./twopc_go_pb --go-grpc_opt=paths=source_relative \
           two_phase_commit.proto

COPY global_decision.go .
RUN go build -o global_decision global_decision.go

# Stage 2: Combine Python and Go runtime
FROM python:3.11-slim

WORKDIR /app

# Install grpcio and grpcio-tools explicitly
RUN pip install grpcio grpcio-tools

# Copy proto file and generate Python stubs
COPY two_phase_commit.proto .
RUN python -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. two_phase_commit.proto

# Copy Python participant script
COPY participant.py .

# Copy Go binary from builder stage
COPY --from=go-builder /app/global_decision .

EXPOSE 50051 6001 50052 6002 50053 6003 50054 6004 50055 6005

CMD ["sh", "-c", "./global_decision -role=participant -port=$LISTEN_PORT & python participant.py && wait"]
