syntax = "proto3";
package raft;
option go_package = "proto/raft;raft";

message LogEntry {
  string operation = 1;
  int32  term      = 2;
  int32  index     = 3;
}

message AppendEntriesRequest {
  int32               term        = 1;
  int32               leaderId    = 2;
  repeated LogEntry   log         = 3;
  int32               commitIndex = 4;
}

message AppendEntriesResponse {
  bool success = 1;
  int32 nodeId = 2;
}

message VoteRequest  { int32 candidateId = 1; int32 term = 2; }
message VoteResponse { bool  voteGranted = 1; int32 term = 2; }

message ClientRequest  { string operation = 1; }
message ClientResponse { string result    = 1; }

service Raft {
  rpc AppendEntries      (AppendEntriesRequest) returns (AppendEntriesResponse);
  rpc RequestVote        (VoteRequest)          returns (VoteResponse);
  rpc SubmitClientRequest(ClientRequest)        returns (ClientResponse);
}

service LogReplicator {
  rpc ReplicateLog(AppendEntriesRequest) returns (AppendEntriesResponse);
  rpc AckReplication(AppendEntriesResponse) returns (ClientResponse);
}