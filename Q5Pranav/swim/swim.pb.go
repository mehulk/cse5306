// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: swim.proto

package swim

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderId      int32                  `protobuf:"varint,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_swim_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swim_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_swim_proto_rawDescGZIP(), []int{0}
}

func (x *PingRequest) GetSenderId() int32 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

type PingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderId      int32                  `protobuf:"varint,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_swim_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swim_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_swim_proto_rawDescGZIP(), []int{1}
}

func (x *PingResponse) GetSenderId() int32 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

type IndirectPingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderId      int32                  `protobuf:"varint,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	TargetId      int32                  `protobuf:"varint,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndirectPingRequest) Reset() {
	*x = IndirectPingRequest{}
	mi := &file_swim_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndirectPingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndirectPingRequest) ProtoMessage() {}

func (x *IndirectPingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swim_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndirectPingRequest.ProtoReflect.Descriptor instead.
func (*IndirectPingRequest) Descriptor() ([]byte, []int) {
	return file_swim_proto_rawDescGZIP(), []int{2}
}

func (x *IndirectPingRequest) GetSenderId() int32 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *IndirectPingRequest) GetTargetId() int32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

type IndirectPingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderId      int32                  `protobuf:"varint,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndirectPingResponse) Reset() {
	*x = IndirectPingResponse{}
	mi := &file_swim_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndirectPingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndirectPingResponse) ProtoMessage() {}

func (x *IndirectPingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swim_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndirectPingResponse.ProtoReflect.Descriptor instead.
func (*IndirectPingResponse) Descriptor() ([]byte, []int) {
	return file_swim_proto_rawDescGZIP(), []int{3}
}

func (x *IndirectPingResponse) GetSenderId() int32 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *IndirectPingResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type MulticastRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderId      int32                  `protobuf:"varint,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	FailedNodeId  int32                  `protobuf:"varint,2,opt,name=failed_node_id,json=failedNodeId,proto3" json:"failed_node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MulticastRequest) Reset() {
	*x = MulticastRequest{}
	mi := &file_swim_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MulticastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MulticastRequest) ProtoMessage() {}

func (x *MulticastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swim_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MulticastRequest.ProtoReflect.Descriptor instead.
func (*MulticastRequest) Descriptor() ([]byte, []int) {
	return file_swim_proto_rawDescGZIP(), []int{4}
}

func (x *MulticastRequest) GetSenderId() int32 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *MulticastRequest) GetFailedNodeId() int32 {
	if x != nil {
		return x.FailedNodeId
	}
	return 0
}

type MulticastResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MulticastResponse) Reset() {
	*x = MulticastResponse{}
	mi := &file_swim_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MulticastResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MulticastResponse) ProtoMessage() {}

func (x *MulticastResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swim_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MulticastResponse.ProtoReflect.Descriptor instead.
func (*MulticastResponse) Descriptor() ([]byte, []int) {
	return file_swim_proto_rawDescGZIP(), []int{5}
}

func (x *MulticastResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type JoinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NewNodeId     int32                  `protobuf:"varint,1,opt,name=new_node_id,json=newNodeId,proto3" json:"new_node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	mi := &file_swim_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swim_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_swim_proto_rawDescGZIP(), []int{6}
}

func (x *JoinRequest) GetNewNodeId() int32 {
	if x != nil {
		return x.NewNodeId
	}
	return 0
}

type JoinResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MembershipList []int32                `protobuf:"varint,1,rep,packed,name=membership_list,json=membershipList,proto3" json:"membership_list,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *JoinResponse) Reset() {
	*x = JoinResponse{}
	mi := &file_swim_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinResponse) ProtoMessage() {}

func (x *JoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swim_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinResponse.ProtoReflect.Descriptor instead.
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return file_swim_proto_rawDescGZIP(), []int{7}
}

func (x *JoinResponse) GetMembershipList() []int32 {
	if x != nil {
		return x.MembershipList
	}
	return nil
}

type NodeStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        int32                  `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	IsAlive       bool                   `protobuf:"varint,2,opt,name=is_alive,json=isAlive,proto3" json:"is_alive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeStatus) Reset() {
	*x = NodeStatus{}
	mi := &file_swim_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStatus) ProtoMessage() {}

func (x *NodeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_swim_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStatus.ProtoReflect.Descriptor instead.
func (*NodeStatus) Descriptor() ([]byte, []int) {
	return file_swim_proto_rawDescGZIP(), []int{8}
}

func (x *NodeStatus) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *NodeStatus) GetIsAlive() bool {
	if x != nil {
		return x.IsAlive
	}
	return false
}

type UpdateMembershipListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*NodeStatus          `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMembershipListRequest) Reset() {
	*x = UpdateMembershipListRequest{}
	mi := &file_swim_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMembershipListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMembershipListRequest) ProtoMessage() {}

func (x *UpdateMembershipListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swim_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMembershipListRequest.ProtoReflect.Descriptor instead.
func (*UpdateMembershipListRequest) Descriptor() ([]byte, []int) {
	return file_swim_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateMembershipListRequest) GetNodes() []*NodeStatus {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type UpdateMembershipListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMembershipListResponse) Reset() {
	*x = UpdateMembershipListResponse{}
	mi := &file_swim_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMembershipListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMembershipListResponse) ProtoMessage() {}

func (x *UpdateMembershipListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swim_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMembershipListResponse.ProtoReflect.Descriptor instead.
func (*UpdateMembershipListResponse) Descriptor() ([]byte, []int) {
	return file_swim_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateMembershipListResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_swim_proto protoreflect.FileDescriptor

var file_swim_proto_rawDesc = string([]byte{
	0x0a, 0x0a, 0x73, 0x77, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x73, 0x77,
	0x69, 0x6d, 0x22, 0x2a, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2b,
	0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x13, 0x49,
	0x6e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x14,
	0x49, 0x6e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x55, 0x0a, 0x10, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x22, 0x2d, 0x0a, 0x11, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x2d, 0x0a, 0x0b, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x22, 0x37, 0x0a, 0x0c, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x40, 0x0a, 0x0a, 0x4e, 0x6f, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x22, 0x45, 0x0a, 0x1b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x77, 0x69, 0x6d,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x22, 0x38, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xf8, 0x01, 0x0a,
	0x0b, 0x53, 0x77, 0x69, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x04,
	0x50, 0x69, 0x6e, 0x67, 0x12, 0x11, 0x2e, 0x73, 0x77, 0x69, 0x6d, 0x2e, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x77, 0x69, 0x6d, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a,
	0x0c, 0x49, 0x6e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x2e,
	0x73, 0x77, 0x69, 0x6d, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x77, 0x69, 0x6d, 0x2e,
	0x49, 0x6e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x09, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63,
	0x61, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x77, 0x69, 0x6d, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x77,
	0x69, 0x6d, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x04, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x11,
	0x2e, 0x73, 0x77, 0x69, 0x6d, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x12, 0x2e, 0x73, 0x77, 0x69, 0x6d, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x72, 0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5f, 0x0a, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x21, 0x2e, 0x73, 0x77, 0x69, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x77, 0x69, 0x6d, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x71,
	0x35, 0x70, 0x72, 0x61, 0x6e, 0x61, 0x76, 0x2f, 0x73, 0x77, 0x69, 0x6d, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_swim_proto_rawDescOnce sync.Once
	file_swim_proto_rawDescData []byte
)

func file_swim_proto_rawDescGZIP() []byte {
	file_swim_proto_rawDescOnce.Do(func() {
		file_swim_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_swim_proto_rawDesc), len(file_swim_proto_rawDesc)))
	})
	return file_swim_proto_rawDescData
}

var file_swim_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_swim_proto_goTypes = []any{
	(*PingRequest)(nil),                  // 0: swim.PingRequest
	(*PingResponse)(nil),                 // 1: swim.PingResponse
	(*IndirectPingRequest)(nil),          // 2: swim.IndirectPingRequest
	(*IndirectPingResponse)(nil),         // 3: swim.IndirectPingResponse
	(*MulticastRequest)(nil),             // 4: swim.MulticastRequest
	(*MulticastResponse)(nil),            // 5: swim.MulticastResponse
	(*JoinRequest)(nil),                  // 6: swim.JoinRequest
	(*JoinResponse)(nil),                 // 7: swim.JoinResponse
	(*NodeStatus)(nil),                   // 8: swim.NodeStatus
	(*UpdateMembershipListRequest)(nil),  // 9: swim.UpdateMembershipListRequest
	(*UpdateMembershipListResponse)(nil), // 10: swim.UpdateMembershipListResponse
}
var file_swim_proto_depIdxs = []int32{
	8,  // 0: swim.UpdateMembershipListRequest.nodes:type_name -> swim.NodeStatus
	0,  // 1: swim.SwimService.Ping:input_type -> swim.PingRequest
	2,  // 2: swim.SwimService.IndirectPing:input_type -> swim.IndirectPingRequest
	4,  // 3: swim.SwimService.Multicast:input_type -> swim.MulticastRequest
	6,  // 4: swim.SwimService.Join:input_type -> swim.JoinRequest
	9,  // 5: swim.InternalService.UpdateMembershipList:input_type -> swim.UpdateMembershipListRequest
	1,  // 6: swim.SwimService.Ping:output_type -> swim.PingResponse
	3,  // 7: swim.SwimService.IndirectPing:output_type -> swim.IndirectPingResponse
	5,  // 8: swim.SwimService.Multicast:output_type -> swim.MulticastResponse
	7,  // 9: swim.SwimService.Join:output_type -> swim.JoinResponse
	10, // 10: swim.InternalService.UpdateMembershipList:output_type -> swim.UpdateMembershipListResponse
	6,  // [6:11] is the sub-list for method output_type
	1,  // [1:6] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_swim_proto_init() }
func file_swim_proto_init() {
	if File_swim_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_swim_proto_rawDesc), len(file_swim_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_swim_proto_goTypes,
		DependencyIndexes: file_swim_proto_depIdxs,
		MessageInfos:      file_swim_proto_msgTypes,
	}.Build()
	File_swim_proto = out.File
	file_swim_proto_goTypes = nil
	file_swim_proto_depIdxs = nil
}
